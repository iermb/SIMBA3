<?php

namespace SIMBA3\Component\Domain\Indicator\Entity;

use PHPUnit\Framework\TestCase;

class IndicatorTranslationTest extends TestCase
{
    private IndicatorTranslation $indicatorTranslation;
    private Indicator $indicator;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->indicator = $this->createMock(Indicator::class);
    }

    /** @test */
    public function shouldReturnIndicatorTranslationValues()
    {
        $this->givenAIndicatorTranslation();
        $this->thenReturnValidInfoIndicatorTranslation();
    }

    private function givenAIndicatorTranslation()
    {
        $this->indicatorTranslation = new IndicatorTranslation(
            $this->indicator,
            'dk',
            "Test name",
            "Test description",
            "units",
            "note",
            "font",
            "Test methodology"
        );
    }

    private function thenReturnValidInfoIndicatorTranslation()
    {
        $this->assertEquals("dk", $this->indicatorTranslation->getLanguage());
        $this->assertEquals($this->indicator, $this->indicatorTranslation->getIndicator());
        $this->assertEquals("note", $this->indicatorTranslation->getNote());
        $this->assertEquals("units", $this->indicatorTranslation->getUnits());
        $this->assertEquals("font", $this->indicatorTranslation->getFont());
        $this->assertEquals("Test methodology", $this->indicatorTranslation->getMethodology());
        $this->assertEquals("Test description", $this->indicatorTranslation->getDescription());
        $this->assertEquals("Test name", $this->indicatorTranslation->getName());
    }
}
