[1mdiff --git a/code/SIMBA3/config/packages/doctrine.yaml b/code/SIMBA3/config/packages/doctrine.yaml[m
[1mindex 0a68945..17b1cb4 100644[m
[1m--- a/code/SIMBA3/config/packages/doctrine.yaml[m
[1m+++ b/code/SIMBA3/config/packages/doctrine.yaml[m
[36m@@ -32,10 +32,10 @@[m [mdoctrine:[m
                 prefix: 'SIMBA3\Component\Domain\Value'[m
                 alias: Value[m
 [m
[31m-            Area:[m
[32m+[m[32m            Variable:[m
                 is_bundle: false[m
                 type: xml[m
[31m-                dir: '%kernel.project_dir%/src/Api/Persistence/Migrations/Area'[m
[31m-                prefix: 'SIMBA3\Component\Domain\Area'[m
[31m-                alias: Area[m
[32m+[m[32m                dir: '%kernel.project_dir%/src/Api/Persistence/Migrations/Variable'[m
[32m+[m[32m                prefix: 'SIMBA3\Component\Domain\Variable'[m
[32m+[m[32m                alias: Variable[m
 [m
[1mdiff --git a/code/SIMBA3/config/routes.yaml b/code/SIMBA3/config/routes.yaml[m
[1mindex c35a7bf..50c935d 100644[m
[1m--- a/code/SIMBA3/config/routes.yaml[m
[1m+++ b/code/SIMBA3/config/routes.yaml[m
[36m@@ -20,13 +20,13 @@[m [mapi_read_values_indicator:[m
 [m
 api_read_all_type_area:[m
   path: /type-area/[m
[31m-  controller: SIMBA3\Api\Controller\Area\ReadAllTypeAreaController::execute[m
[32m+[m[32m  controller: SIMBA3\Api\Controller\Variable\ReadAllTypeAreaController::execute[m
   methods: GET[m
 [m
 [m
 api_read_area:[m
[31m-  path: /type-area/{areaTypeId}/area/[m
[31m-  controller: SIMBA3\Api\Controller\Area\ReadAllAreaTypeAreaController::execute[m
[32m+[m[32m  path: /type-area/{TypeAreaId}/area/[m
[32m+[m[32m  controller: SIMBA3\Api\Controller\Variable\ReadAllAreaTypeAreaController::execute[m
   methods: GET[m
   requirements:[m
[31m-    areaTypeId: '\d+'[m
\ No newline at end of file[m
[32m+[m[32m    TypeAreaId: '\d+'[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/config/services.yaml b/code/SIMBA3/config/services.yaml[m
[1mindex a268665..b67dc52 100644[m
[1m--- a/code/SIMBA3/config/services.yaml[m
[1m+++ b/code/SIMBA3/config/services.yaml[m
[36m@@ -35,12 +35,12 @@[m [mservices:[m
         arguments:[m
             - "@simba3.useCase.readValuesIndicator"[m
 [m
[31m-    SIMBA3\Api\Controller\Area\ReadAllTypeAreaController:[m
[32m+[m[32m    SIMBA3\Api\Controller\Variable\ReadAllTypeAreaController:[m
         tags: [controller.service_arguments][m
         arguments:[m
             - "@simba3.useCase.ReadAllTypeArea"[m
 [m
[31m-    SIMBA3\Api\Controller\Area\ReadAllAreaTypeAreaController:[m
[32m+[m[32m    SIMBA3\Api\Controller\Variable\ReadAllAreaTypeAreaController:[m
         tags: [controller.service_arguments][m
         arguments:[m
             - "@simba3.useCase.ReadAllAreaTypeArea"[m
[36m@@ -57,12 +57,12 @@[m [mservices:[m
             - "@simba3.factory.typeValue"[m
 [m
     simba3.useCase.ReadAllTypeArea:[m
[31m-        class: SIMBA3\Component\Application\Area\UseCase\ReadAllTypeAreaUseCase[m
[32m+[m[32m        class: SIMBA3\Component\Application\Variable\UseCase\ReadAllTypeAreaUseCase[m
         arguments:[m
             - "@simba3.repository.doctrine.typeArea"[m
 [m
     simba3.useCase.ReadAllAreaTypeArea:[m
[31m-        class: SIMBA3\Component\Application\Area\UseCase\ReadAllAreaTypeAreaUseCase[m
[32m+[m[32m        class: SIMBA3\Component\Application\Variable\UseCase\ReadAllAreaTypeAreaUseCase[m
         arguments:[m
             - "@simba3.repository.doctrine.typeArea"[m
             - "@simba3.repository.doctrine.area"[m
[36m@@ -92,13 +92,13 @@[m [mservices:[m
             - "@simba3.repository.metadata.yearValue"[m
 [m
     simba3.repository.doctrine.typeArea:[m
[31m-        class: SIMBA3\Api\Persistence\Repository\Area\DoctrineTypeAreaRepository[m
[32m+[m[32m        class: SIMBA3\Api\Persistence\Repository\Variable\DoctrineTypeAreaRepository[m
         arguments:[m
             - "@doctrine.orm.entity_manager"[m
             - "@simba3.repository.metadata.typeArea"[m
 [m
     simba3.repository.doctrine.area:[m
[31m-        class: SIMBA3\Api\Persistence\Repository\Area\DoctrineAreaRepository[m
[32m+[m[32m        class: SIMBA3\Api\Persistence\Repository\Variable\DoctrineAreaRepository[m
         arguments:[m
             - "@doctrine.orm.entity_manager"[m
             - "@simba3.repository.metadata.area"[m
[36m@@ -121,9 +121,9 @@[m [mservices:[m
     simba3.repository.metadata.typeArea:[m
         class: Doctrine\ORM\Mapping\ClassMetadata[m
         arguments:[m
[31m-            - SIMBA3\Component\Domain\Area\Entity\TypeArea[m
[32m+[m[32m            - SIMBA3\Component\Domain\Variable\Entity\TypeArea[m
 [m
     simba3.repository.metadata.area:[m
         class: Doctrine\ORM\Mapping\ClassMetadata[m
         arguments:[m
[31m-            - SIMBA3\Component\Domain\Area\Entity\Area[m
[32m+[m[32m            - SIMBA3\Component\Domain\Variable\Entity\Area[m
[1mdiff --git a/code/SIMBA3/src/Api/Controller/Area/ReadAllAreaTypeAreaController.php b/code/SIMBA3/src/Api/Controller/Area/ReadAllAreaTypeAreaController.php[m
[1mdeleted file mode 100644[m
[1mindex eb3d16b..0000000[m
[1m--- a/code/SIMBA3/src/Api/Controller/Area/ReadAllAreaTypeAreaController.php[m
[1m+++ /dev/null[m
[36m@@ -1,34 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Api\Controller\Area;[m
[31m-[m
[31m-[m
[31m-use SIMBA3\Component\Application\Area\Request\ReadAllAreaTypeAreaRequest;[m
[31m-use SIMBA3\Component\Application\Area\UseCase\ReadAllAreaTypeAreaUseCase;[m
[31m-use Symfony\Component\HttpFoundation\JsonResponse;[m
[31m-use Symfony\Component\HttpFoundation\Response;[m
[31m-[m
[31m-class ReadAllAreaTypeAreaController[m
[31m-{[m
[31m-    private ReadAllAreaTypeAreaUseCase $readAreaTypeAreaUseCase;[m
[31m-[m
[31m-    public function __construct(ReadAllAreaTypeAreaUseCase $readAreaTypeAreaUseCase)[m
[31m-    {[m
[31m-        $this->readAreaTypeAreaUseCase = $readAreaTypeAreaUseCase;[m
[31m-    }[m
[31m-[m
[31m-    public function execute(int $areaTypeId): Response[m
[31m-    {[m
[31m-        try {[m
[31m-[m
[31m-            $areaTypeAreaResponse = $this->readAreaTypeAreaUseCase->execute(new ReadAllAreaTypeAreaRequest($areaTypeId));[m
[31m-            return new JsonResponse($areaTypeAreaResponse->getAllTypeArea(), Response::HTTP_OK);[m
[31m-[m
[31m-        } catch (\InvalidArgumentException $exception) {[m
[31m-[m
[31m-            return new Response("", Response::HTTP_NOT_FOUND);[m
[31m-        }[m
[31m-        [m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Api/Controller/Area/ReadAllTypeAreaController.php b/code/SIMBA3/src/Api/Controller/Area/ReadAllTypeAreaController.php[m
[1mdeleted file mode 100644[m
[1mindex 1421ffa..0000000[m
[1m--- a/code/SIMBA3/src/Api/Controller/Area/ReadAllTypeAreaController.php[m
[1m+++ /dev/null[m
[36m@@ -1,25 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Api\Controller\Area;[m
[31m-[m
[31m-[m
[31m-use SIMBA3\Component\Application\Area\UseCase\ReadAllTypeAreaUseCase;[m
[31m-use Symfony\Component\HttpFoundation\JsonResponse;[m
[31m-use Symfony\Component\HttpFoundation\Response;[m
[31m-[m
[31m-class ReadAllTypeAreaController[m
[31m-{[m
[31m-    private ReadAllTypeAreaUseCase $readAllTypeAreaUseCase;[m
[31m-[m
[31m-    public function __construct(ReadAllTypeAreaUseCase $readAllTypeAreaUseCase)[m
[31m-    {[m
[31m-        $this->readAllTypeAreaUseCase = $readAllTypeAreaUseCase;[m
[31m-    }[m
[31m-[m
[31m-    public function execute(): Response[m
[31m-    {[m
[31m-        $indicatorResponse = $this->readAllTypeAreaUseCase->execute();[m
[31m-        return new JsonResponse($indicatorResponse->getAllTypeArea(), Response::HTTP_OK);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Api/Persistence/Migrations/Area/Entity.Area.orm.xml b/code/SIMBA3/src/Api/Persistence/Migrations/Area/Entity.Area.orm.xml[m
[1mdeleted file mode 100644[m
[1mindex 2fb362d..0000000[m
[1m--- a/code/SIMBA3/src/Api/Persistence/Migrations/Area/Entity.Area.orm.xml[m
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-<doctrine-mapping xmlns="http://doctrine-project.org/schemas/orm/doctrine-mapping"[m
[31m-                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-                  xsi:schemaLocation="http://doctrine-project.org/schemas/orm/doctrine-mapping[m
[31m-                          https://www.doctrine-project.org/schemas/orm/doctrine-mapping.xsd">[m
[31m-[m
[31m-    <entity name="SIMBA3\Component\Domain\Area\Entity\Area" table="area">[m
[31m-        <id name="id" type="integer" column="id" />[m
[31m-        <id name="typeArea" association-key="true" />[m
[31m-[m
[31m-        <field name="name" column="name" type="string" length="100" nullable="false" />[m
[31m-        <field name="language" column="language" type="string" length="2" nullable="false" />[m
[31m-        <many-to-one field="typeArea" target-entity="SIMBA3\Component\Domain\Area\Entity\TypeArea">[m
[31m-            <join-column name="type_id" referenced-column-name="id" />[m
[31m-        </many-to-one>[m
[31m-    </entity>[m
[31m-[m
[31m-[m
[31m-[m
[31m-</doctrine-mapping>[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Api/Persistence/Migrations/Area/Entity.TypeArea.orm.xml b/code/SIMBA3/src/Api/Persistence/Migrations/Area/Entity.TypeArea.orm.xml[m
[1mdeleted file mode 100644[m
[1mindex cb9c7ad..0000000[m
[1m--- a/code/SIMBA3/src/Api/Persistence/Migrations/Area/Entity.TypeArea.orm.xml[m
[1m+++ /dev/null[m
[36m@@ -1,15 +0,0 @@[m
[31m-<doctrine-mapping xmlns="http://doctrine-project.org/schemas/orm/doctrine-mapping"[m
[31m-                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[31m-                  xsi:schemaLocation="http://doctrine-project.org/schemas/orm/doctrine-mapping[m
[31m-                          https://www.doctrine-project.org/schemas/orm/doctrine-mapping.xsd">[m
[31m-[m
[31m-    <entity name="SIMBA3\Component\Domain\Area\Entity\TypeArea" table="type_area">[m
[31m-        <id name="id" type="integer" column="id" />[m
[31m-[m
[31m-        <field name="name" column="name" type="string" length="100" nullable="false" unique="true" />[m
[31m-        <field name="language" column="language" type="string" length="2" nullable="false" />[m
[31m-    </entity>[m
[31m-[m
[31m-[m
[31m-[m
[31m-</doctrine-mapping>[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Api/Persistence/Repository/Area/DoctrineAreaRepository.php b/code/SIMBA3/src/Api/Persistence/Repository/Area/DoctrineAreaRepository.php[m
[1mdeleted file mode 100644[m
[1mindex 6314eef..0000000[m
[1m--- a/code/SIMBA3/src/Api/Persistence/Repository/Area/DoctrineAreaRepository.php[m
[1m+++ /dev/null[m
[36m@@ -1,25 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Api\Persistence\Repository\Area;[m
[31m-[m
[31m-[m
[31m-use Doctrine\ORM\EntityRepository;[m
[31m-use SIMBA3\Component\Domain\Area\Entity\Area;[m
[31m-use SIMBA3\Component\Domain\Area\Repository\AreaRepository;[m
[31m-[m
[31m-class DoctrineAreaRepository extends EntityRepository implements AreaRepository[m
[31m-{[m
[31m-    private const ID_FIELD = "id";[m
[31m-    private const TYPE_AREA_FIELD = "typeArea";[m
[31m-[m
[31m-    public function getArea(int $areaId): ?Area[m
[31m-    {[m
[31m-        return $this->findOneBy([self::ID_FIELD => $areaId]);[m
[31m-    }[m
[31m-[m
[31m-    public function getAllAreaByTypeArea(int $typeAreaId): array[m
[31m-    {[m
[31m-        return $this->findBy([self::TYPE_AREA_FIELD => $typeAreaId]);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Api/Persistence/Repository/Area/DoctrineTypeAreaRepository.php b/code/SIMBA3/src/Api/Persistence/Repository/Area/DoctrineTypeAreaRepository.php[m
[1mdeleted file mode 100644[m
[1mindex b058643..0000000[m
[1m--- a/code/SIMBA3/src/Api/Persistence/Repository/Area/DoctrineTypeAreaRepository.php[m
[1m+++ /dev/null[m
[36m@@ -1,24 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Api\Persistence\Repository\Area;[m
[31m-[m
[31m-[m
[31m-use Doctrine\ORM\EntityRepository;[m
[31m-use SIMBA3\Component\Domain\Area\Entity\TypeArea;[m
[31m-use SIMBA3\Component\Domain\Area\Repository\TypeAreaRepository;[m
[31m-[m
[31m-class DoctrineTypeAreaRepository extends EntityRepository implements TypeAreaRepository[m
[31m-{[m
[31m-    private const ID_FIELD = "id";[m
[31m-[m
[31m-    public function getTypeArea(int $TypeAreaId): ?TypeArea[m
[31m-    {[m
[31m-        return $this->findOneBy([self::ID_FIELD => $TypeAreaId]);[m
[31m-    }[m
[31m-[m
[31m-    public function getAllTypeArea(): array[m
[31m-    {[m
[31m-        return $this->findAll();[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Component/Application/Area/Request/ReadAllAreaTypeAreaRequest.php b/code/SIMBA3/src/Component/Application/Area/Request/ReadAllAreaTypeAreaRequest.php[m
[1mdeleted file mode 100644[m
[1mindex 1a2013b..0000000[m
[1m--- a/code/SIMBA3/src/Component/Application/Area/Request/ReadAllAreaTypeAreaRequest.php[m
[1m+++ /dev/null[m
[36m@@ -1,20 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Component\Application\Area\Request;[m
[31m-[m
[31m-[m
[31m-class ReadAllAreaTypeAreaRequest[m
[31m-{[m
[31m-    private int $typeAreaId;[m
[31m-[m
[31m-    public function __construct(int $typeAreaId)[m
[31m-    {[m
[31m-        $this->typeAreaId = $typeAreaId;[m
[31m-    }[m
[31m-[m
[31m-    public function getTypeAreaId(): int[m
[31m-    {[m
[31m-        return $this->typeAreaId;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Component/Application/Area/Response/ReadAllAreaTypeAreaResponse.php b/code/SIMBA3/src/Component/Application/Area/Response/ReadAllAreaTypeAreaResponse.php[m
[1mdeleted file mode 100644[m
[1mindex 3f27982..0000000[m
[1m--- a/code/SIMBA3/src/Component/Application/Area/Response/ReadAllAreaTypeAreaResponse.php[m
[1m+++ /dev/null[m
[36m@@ -1,35 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Component\Application\Area\Response;[m
[31m-[m
[31m-[m
[31m-use SIMBA3\Component\Domain\Area\Entity\TypeArea;[m
[31m-[m
[31m-class ReadAllAreaTypeAreaResponse[m
[31m-{[m
[31m-    private const ID_FIELD = "id";[m
[31m-    private const NAME_FIELD = "name";[m
[31m-[m
[31m-    private array $typeAreaArray;[m
[31m-[m
[31m-    public function __construct(array $typeAreaArray)[m
[31m-    {[m
[31m-        $this->typeAreaArray = $typeAreaArray;[m
[31m-    }[m
[31m-[m
[31m-    public function getAllTypeArea(): array[m
[31m-    {[m
[31m-[m
[31m-        $allTypeAreaArray = [];[m
[31m-[m
[31m-        foreach ($this->typeAreaArray as $typeArea) {[m
[31m-            $allTypeAreaArray[] = [[m
[31m-                self::ID_FIELD => $typeArea->getId(),[m
[31m-                self::NAME_FIELD => $typeArea->getName(),[m
[31m-            ];[m
[31m-        }[m
[31m-[m
[31m-        return $allTypeAreaArray;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Component/Application/Area/Response/ReadAllTypeAreaResponse.php b/code/SIMBA3/src/Component/Application/Area/Response/ReadAllTypeAreaResponse.php[m
[1mdeleted file mode 100644[m
[1mindex 678683a..0000000[m
[1m--- a/code/SIMBA3/src/Component/Application/Area/Response/ReadAllTypeAreaResponse.php[m
[1m+++ /dev/null[m
[36m@@ -1,35 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Component\Application\Area\Response;[m
[31m-[m
[31m-[m
[31m-use SIMBA3\Component\Domain\Area\Entity\TypeArea;[m
[31m-[m
[31m-class ReadAllTypeAreaResponse[m
[31m-{[m
[31m-    private const ID_FIELD = "id";[m
[31m-    private const NAME_FIELD = "name";[m
[31m-[m
[31m-    private array $typeAreaArray;[m
[31m-[m
[31m-    public function __construct(array $typeAreaArray)[m
[31m-    {[m
[31m-        $this->typeAreaArray = $typeAreaArray;[m
[31m-    }[m
[31m-[m
[31m-    public function getAllTypeArea(): array[m
[31m-    {[m
[31m-[m
[31m-        $allTypeAreaArray = [];[m
[31m-[m
[31m-        foreach ($this->typeAreaArray as $typeArea) {[m
[31m-            $allTypeAreaArray[] = [[m
[31m-                self::ID_FIELD => $typeArea->getId(),[m
[31m-                self::NAME_FIELD => $typeArea->getName(),[m
[31m-            ];[m
[31m-        }[m
[31m-[m
[31m-        return $allTypeAreaArray;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Component/Application/Area/UseCase/ReadAllAreaTypeAreaUseCase.php b/code/SIMBA3/src/Component/Application/Area/UseCase/ReadAllAreaTypeAreaUseCase.php[m
[1mdeleted file mode 100644[m
[1mindex 9e5f092..0000000[m
[1m--- a/code/SIMBA3/src/Component/Application/Area/UseCase/ReadAllAreaTypeAreaUseCase.php[m
[1m+++ /dev/null[m
[36m@@ -1,35 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Component\Application\Area\UseCase;[m
[31m-[m
[31m-[m
[31m-use SIMBA3\Component\Application\Area\Request\ReadAllAreaTypeAreaRequest;[m
[31m-use SIMBA3\Component\Application\Area\Response\ReadAllAreaTypeAreaResponse;[m
[31m-use SIMBA3\Component\Domain\Area\Repository\TypeAreaRepository;[m
[31m-use SIMBA3\Component\Domain\Area\Repository\AreaRepository;[m
[31m-[m
[31m-class ReadAllAreaTypeAreaUseCase[m
[31m-{[m
[31m-    private TypeAreaRepository $typeAreaRepository;[m
[31m-    private AreaRepository $areaRepository;[m
[31m-[m
[31m-    public function __construct([m
[31m-        TypeAreaRepository $typeAreaRepository,[m
[31m-        AreaRepository $areaRepository[m
[31m-    ){[m
[31m-        $this->typeAreaRepository = $typeAreaRepository;[m
[31m-        $this->areaRepository = $areaRepository;[m
[31m-    }[m
[31m-[m
[31m-    public function execute(ReadAllAreaTypeAreaRequest $areaTypeAreaRequest): ReadAllAreaTypeAreaResponse[m
[31m-    {[m
[31m-        $typeArea = $this->typeAreaRepository->getTypeArea($areaTypeAreaRequest->getTypeAreaId());[m
[31m-        if (!$typeArea) {[m
[31m-            throw new \InvalidArgumentException("typeArea not exists");[m
[31m-        }[m
[31m-[m
[31m-        $areas = $this->areaRepository->getAllAreaByTypeArea($typeArea->getId());[m
[31m-        return new ReadAllAreaTypeAreaResponse($areas);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Component/Application/Area/UseCase/ReadAllTypeAreaUseCase.php b/code/SIMBA3/src/Component/Application/Area/UseCase/ReadAllTypeAreaUseCase.php[m
[1mdeleted file mode 100644[m
[1mindex c413597..0000000[m
[1m--- a/code/SIMBA3/src/Component/Application/Area/UseCase/ReadAllTypeAreaUseCase.php[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Component\Application\Area\UseCase;[m
[31m-[m
[31m-[m
[31m-use SIMBA3\Component\Application\Area\Response\ReadAllTypeAreaResponse;[m
[31m-use SIMBA3\Component\Domain\Area\Repository\TypeAreaRepository;[m
[31m-[m
[31m-class ReadAllTypeAreaUseCase[m
[31m-{[m
[31m-    private TypeAreaRepository $typeAreaRepository;[m
[31m-[m
[31m-    public function __construct(TypeAreaRepository $typeAreaRepository)[m
[31m-    {[m
[31m-        $this->typeAreaRepository = $typeAreaRepository;[m
[31m-    }[m
[31m-[m
[31m-    public function execute(): ReadAllTypeAreaResponse[m
[31m-    {[m
[31m-        return new ReadAllTypeArearesponse($this->typeAreaRepository->getAllTypeArea());[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Component/Domain/Area/Entity/Area.php b/code/SIMBA3/src/Component/Domain/Area/Entity/Area.php[m
[1mdeleted file mode 100644[m
[1mindex 9beaf00..0000000[m
[1m--- a/code/SIMBA3/src/Component/Domain/Area/Entity/Area.php[m
[1m+++ /dev/null[m
[36m@@ -1,43 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Component\Domain\Area\Entity;[m
[31m-[m
[31m-[m
[31m-class Area[m
[31m-{[m
[31m-    private int $id;[m
[31m-    private TypeArea $typeArea;[m
[31m-    private string $name;[m
[31m-    private string $language;[m
[31m-[m
[31m-    public function __construct([m
[31m-        TypeArea $typeArea,[m
[31m-        string $name,[m
[31m-        string $language[m
[31m-    ) {[m
[31m-        $this->typeArea = $typeArea;[m
[31m-        $this->name = $name;[m
[31m-        $this->language = $language;[m
[31m-    }[m
[31m-[m
[31m-    public function getId(): int[m
[31m-    {[m
[31m-        return $this->id;[m
[31m-    }[m
[31m-[m
[31m-    public function getType(): TypeArea[m
[31m-    {[m
[31m-        return $this->typeArea;[m
[31m-    }[m
[31m-[m
[31m-    public function getName(): string[m
[31m-    {[m
[31m-        return $this->name;[m
[31m-    }[m
[31m-[m
[31m-    public function getLanguage(): string[m
[31m-    {[m
[31m-        return $this->language;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Component/Domain/Area/Entity/TypeArea.php b/code/SIMBA3/src/Component/Domain/Area/Entity/TypeArea.php[m
[1mdeleted file mode 100644[m
[1mindex 779c581..0000000[m
[1m--- a/code/SIMBA3/src/Component/Domain/Area/Entity/TypeArea.php[m
[1m+++ /dev/null[m
[36m@@ -1,35 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Component\Domain\Area\Entity;[m
[31m-[m
[31m-[m
[31m-class TypeArea[m
[31m-{[m
[31m-    private int $id;[m
[31m-    private string $name;[m
[31m-    private string $language;[m
[31m-[m
[31m-    public function __construct([m
[31m-        string $name,[m
[31m-        string $language[m
[31m-    ) {[m
[31m-        $this->name = $name;[m
[31m-        $this->language = $language;[m
[31m-    }[m
[31m-[m
[31m-    public function getId(): int[m
[31m-    {[m
[31m-        return $this->id;[m
[31m-    }[m
[31m-[m
[31m-    public function getName(): string[m
[31m-    {[m
[31m-        return $this->name;[m
[31m-    }[m
[31m-[m
[31m-    public function getLanguage(): string[m
[31m-    {[m
[31m-        return $this->language;[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Component/Domain/Area/Repository/AreaRepository.php b/code/SIMBA3/src/Component/Domain/Area/Repository/AreaRepository.php[m
[1mdeleted file mode 100644[m
[1mindex 2a67b10..0000000[m
[1m--- a/code/SIMBA3/src/Component/Domain/Area/Repository/AreaRepository.php[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Component\Domain\Area\Repository;[m
[31m-[m
[31m-[m
[31m-use SIMBA3\Component\Domain\Area\Entity\Area;[m
[31m-use SIMBA3\Component\Domain\Area\Entity\TypeArea;[m
[31m-[m
[31m-interface AreaRepository[m
[31m-{[m
[31m-    public function getArea(int $areaId): ?Area;[m
[31m-[m
[31m-    //ó[m
[31m-    //public function getAllAreaByTypeArea(TypeArea $typeArea): array;[m
[31m-    public function getAllAreaByTypeArea(int $typeAreaId): array;[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/code/SIMBA3/src/Component/Domain/Area/Repository/TypeAreaRepository.php b/code/SIMBA3/src/Component/Domain/Area/Repository/TypeAreaRepository.php[m
[1mdeleted file mode 100644[m
[1mindex 35b1c59..0000000[m
[1m--- a/code/SIMBA3/src/Component/Domain/Area/Repository/TypeAreaRepository.php[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-<?php[m
[31m-[m
[31m-[m
[31m-namespace SIMBA3\Component\Domain\Area\Repository;[m
[31m-[m
[31m-[m
[31m-use SIMBA3\Component\Domain\Area\Entity\TypeArea;[m
[31m-[m
[31m-interface TypeAreaRepository[m
[31m-{[m
[31m-    public function getTypeArea(int $TypeAreaId): ?TypeArea;[m
[31m-[m
[31m-    public function getAllTypeArea(): array;[m
[31m-}[m
\ No newline at end of file[m
